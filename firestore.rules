rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función para verificar si el usuario es administrador
    function isAdmin() {
      return request.auth != null && (
        exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid)) ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
    }
    
    // Función para verificar si el usuario es comercial o admin
    function isCommercialOrAdmin() {
      return request.auth != null && (
        exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid)) ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'comercial'])
      );
    }
    
    // Usuarios normales - Reglas mejoradas para Google Auth
    match /users/{userId} {
      // Permitir acceso completo a usuarios autenticados a sus propios datos
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
      
      // Permitir creación de perfiles para cualquier usuario autenticado
      // (necesario para Google Auth y primer usuario)
      allow create: if request.auth != null;
      
      // Permitir lectura para verificar si es primer usuario
      allow read: if request.auth != null;
      
      // Permitir acceso administrativo (verificación cuidadosa)
      allow read, write, list: if request.auth != null && 
        (exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid)) ||
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
      
      // Recordatorios de usuarios - subcolección
      match /recordatorios/{recordatorioId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow read, write: if isAdmin();
        allow list: if request.auth != null && (request.auth.uid == userId || isAdmin());
      }
    }
    
    // AdminUsers - Gestión de administradores
    match /adminUsers/{adminId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      allow list: if request.auth != null;
    }
    
        // Clientes (nombre de colección usado en la app)
    match /clientes/{clientId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
      
      // Recordatorios de clientes - subcolección
      match /recordatorios/{recordatorioId} {
        allow read, write: if request.auth != null;
        allow list: if request.auth != null;
      }
    }
    
    // Productos (nombre usado en la app)
    match /productos/{productId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
    }
    
    // Facturas (nombre usado en la app)
    match /facturas/{invoiceId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
      
      // Pagos de facturas - subcolección
      match /payments/{paymentId} {
        allow read, write: if request.auth != null;
        allow list: if request.auth != null;
      }
    }
    
    // Ofertas (nombre usado en la app)
    match /ofertas/{offerId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
    }
    
    // Gastos (nombre usado en la app)
    match /expenses/{expenseId} {
      allow read, write: if request.auth != null;
      allow list: if request.auth != null;
    }
    
    // Contadores para numeración secuencial
    match /counters/{counterId} {
      allow read, write: if request.auth != null && isCommercialOrAdmin();
    }
    
    // Configuraciones del sistema
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Configuraciones del sistema (system_settings) 
    match /system_settings/{settingId} {
      allow read: if true; // Temporal para análisis
      allow write: if true; // Temporal para migración
    }
    
    // Tabla configuracion (temporal para análisis)
    match /configuracion/{configId} {
      allow read: if true; // Temporal para inspección
      allow write: if true; // Temporal para migración
    }
  }
}
