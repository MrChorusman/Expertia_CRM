// ===============================
// SCRIPT MAESTRO PARA DISTRIBUIR APLICACI√ìN - EXPERTIA CRM
// ===============================

const { execSync } = require('child_process');
const fs = require('fs');
const readline = require('readline');

console.log('üöÄ DISTRIBUIDOR DE APLICACI√ìN - EXPERTIA CRM');
console.log('============================================');
console.log('');

// Crear interfaz para entrada del usuario
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// Funci√≥n para hacer pregunta
function askQuestion(question) {
    return new Promise((resolve) => {
        rl.question(question, resolve);
    });
}

// Funci√≥n para mostrar opciones
function showOptions() {
    console.log('üìã OPCIONES DISPONIBLES:');
    console.log('');
    console.log('1. üñ•Ô∏è  EJECUTABLE (Electron)');
    console.log('   - Aplicaci√≥n nativa para Windows/Mac/Linux');
    console.log('   - No requiere instalaci√≥n de Node.js');
    console.log('   - Archivo .exe/.dmg/.AppImage');
    console.log('');
    console.log('2. üì¶ PAQUETE PORTABLE (Node.js)');
    console.log('   - Requiere Node.js instalado');
    console.log('   - M√°s ligero y flexible');
    console.log('   - Scripts de inicio autom√°tico');
    console.log('');
    console.log('3. ‚òÅÔ∏è  DESPLIEGUE EN LA NUBE');
    console.log('   - Aplicaci√≥n web accesible desde cualquier lugar');
    console.log('   - No requiere instalaci√≥n local');
    console.log('   - Solo necesitas compartir una URL');
    console.log('');
    console.log('4. üåê SERVIDOR LOCAL (Actual)');
    console.log('   - Mantener el servidor actual');
    console.log('   - Compartir tu IP local');
    console.log('   - M√°s r√°pido para pruebas');
    console.log('');
}

// Funci√≥n para ejecutar opci√≥n 1: Ejecutable
async function createExecutable() {
    console.log('\nüñ•Ô∏è  CREANDO EJECUTABLE...');
    console.log('========================');
    
    try {
        execSync('node crear-ejecutable.js', { stdio: 'inherit' });
        console.log('\n‚úÖ Ejecutable creado exitosamente');
        console.log('üìÅ Ubicaci√≥n: ./dist/');
        console.log('üìã Instrucciones: ./dist/INSTRUCCIONES.txt');
    } catch (error) {
        console.error('\n‚ùå Error creando ejecutable:', error.message);
    }
}

// Funci√≥n para ejecutar opci√≥n 2: Paquete Portable
async function createPortable() {
    console.log('\nüì¶ CREANDO PAQUETE PORTABLE...');
    console.log('=============================');
    
    try {
        execSync('node crear-paquete-portable.js', { stdio: 'inherit' });
        console.log('\n‚úÖ Paquete portable creado exitosamente');
        console.log('üìÅ Ubicaci√≥n: ./portable/');
        console.log('üìã Instrucciones: ./portable/README.md');
    } catch (error) {
        console.error('\n‚ùå Error creando paquete portable:', error.message);
    }
}

// Funci√≥n para ejecutar opci√≥n 3: Despliegue en la Nube
async function deployCloud() {
    console.log('\n‚òÅÔ∏è  PREPARANDO DESPLIEGUE EN LA NUBE...');
    console.log('=====================================');
    
    try {
        execSync('node desplegar-nube.js', { stdio: 'inherit' });
        console.log('\n‚úÖ Archivos de despliegue creados');
        console.log('üìÅ Archivos: vercel.json, netlify.toml, desplegar.sh');
        console.log('üìã Instrucciones: ./INSTRUCCIONES-DESPLIEGUE.md');
        console.log('\nüöÄ Para desplegar, ejecuta: ./desplegar.sh');
    } catch (error) {
        console.error('\n‚ùå Error preparando despliegue:', error.message);
    }
}

// Funci√≥n para mostrar opci√≥n 4: Servidor Local
function showLocalServer() {
    console.log('\nüåê SERVIDOR LOCAL ACTUAL');
    console.log('========================');
    console.log('');
    console.log('‚úÖ Tu servidor ya est√° funcionando en:');
    console.log('   üåê http://localhost:8085');
    console.log('');
    console.log('üìã Para compartir con tu compa√±ero:');
    console.log('   1. Encuentra tu IP local:');
    console.log('      - Windows: ipconfig');
    console.log('      - Mac/Linux: ifconfig');
    console.log('');
    console.log('   2. Comparte: http://TU-IP:8085');
    console.log('      Ejemplo: http://192.168.1.100:8085');
    console.log('');
    console.log('   3. Aseg√∫rate de que ambos est√©n en la misma red');
    console.log('');
    console.log('‚ö†Ô∏è  LIMITACIONES:');
    console.log('   - Solo funciona en la misma red local');
    console.log('   - Requiere que tu computadora est√© encendida');
    console.log('   - Puede requerir configuraci√≥n de firewall');
}

// Funci√≥n para mostrar resumen
function showSummary(option) {
    console.log('\nüìä RESUMEN DE OPCIONES');
    console.log('======================');
    console.log('');
    
    switch(option) {
        case '1':
            console.log('üñ•Ô∏è  EJECUTABLE (Electron)');
            console.log('‚úÖ Ventajas:');
            console.log('   - No requiere Node.js');
            console.log('   - Aplicaci√≥n nativa');
            console.log('   - F√°cil de instalar');
            console.log('‚ö†Ô∏è  Desventajas:');
            console.log('   - Archivo m√°s grande');
            console.log('   - Requiere compilaci√≥n');
            break;
            
        case '2':
            console.log('üì¶ PAQUETE PORTABLE (Node.js)');
            console.log('‚úÖ Ventajas:');
            console.log('   - Archivo m√°s peque√±o');
            console.log('   - F√°cil de modificar');
            console.log('   - Scripts autom√°ticos');
            console.log('‚ö†Ô∏è  Desventajas:');
            console.log('   - Requiere Node.js');
            console.log('   - M√°s pasos de instalaci√≥n');
            break;
            
        case '3':
            console.log('‚òÅÔ∏è  DESPLIEGUE EN LA NUBE');
            console.log('‚úÖ Ventajas:');
            console.log('   - Accesible desde cualquier lugar');
            console.log('   - No requiere instalaci√≥n');
            console.log('   - Solo compartir URL');
            console.log('‚ö†Ô∏è  Desventajas:');
            console.log('   - Requiere cuenta en plataforma');
            console.log('   - Dependiente de internet');
            break;
            
        case '4':
            console.log('üåê SERVIDOR LOCAL');
            console.log('‚úÖ Ventajas:');
            console.log('   - M√°s r√°pido');
            console.log('   - No requiere configuraci√≥n adicional');
            console.log('   - Ideal para pruebas');
            console.log('‚ö†Ô∏è  Desventajas:');
            console.log('   - Solo red local');
            console.log('   - Requiere computadora encendida');
            break;
    }
}

// Funci√≥n principal
async function main() {
    try {
        showOptions();
        
        const choice = await askQuestion('\nSelecciona una opci√≥n (1-4): ');
        
        console.log('\n' + '='.repeat(50));
        
        switch(choice) {
            case '1':
                await createExecutable();
                break;
            case '2':
                await createPortable();
                break;
            case '3':
                await deployCloud();
                break;
            case '4':
                showLocalServer();
                break;
            default:
                console.log('‚ùå Opci√≥n inv√°lida');
                return;
        }
        
        showSummary(choice);
        
        console.log('\nüéâ PROCESO COMPLETADO');
        console.log('====================');
        console.log('');
        console.log('üí° PR√ìXIMOS PASOS:');
        console.log('   1. Revisa los archivos generados');
        console.log('   2. Prueba la opci√≥n elegida');
        console.log('   3. Comparte con tu compa√±ero');
        console.log('   4. Solicita feedback');
        
    } catch (error) {
        console.error('\n‚ùå ERROR:', error.message);
    } finally {
        rl.close();
    }
}

// Ejecutar
main();

